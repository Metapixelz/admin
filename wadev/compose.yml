version: "3.6"
services:
  reverse-proxy:
    image: traefik:v2.8
    expose:
      - "8080"
    ports:
      - "80:80"
    command:
      - --api.insecure=true
      - --providers.docker
      - --entryPoints.web.address=:80
      - --providers.docker.exposedbydefault=false
      #- --log.level=DEBUG
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
      - "traefik.http.routers.traefik.rule=Host(`traefik.workadventure.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      default:
        aliases:
          - 'play.workadventure.localhost'
          - 'xmpp.workadventure.localhost'
          - 'upload.workadventure.localhost'

  play:
    image: thecodingmachine/workadventure-play:${VERSION}
    environment:
      - DEBUG_MODE
      - JITSI_URL
      - JITSI_PRIVATE_MODE
      - ENABLE_FEATURE_MAP_EDITOR
      - ENABLE_MAP_EDITOR_AREAS_TOOL
      - PUSHER_URL=${HTTP_PROTOCOL}://${DOMAIN}
      - ICON_URL=/icon
      - TURN_SERVER
      - TURN_USER
      - TURN_PASSWORD
      - TURN_STATIC_AUTH_SECRET
      - STUN_SERVER
      - SKIP_RENDER_OPTIMIZATIONS
      - MAX_PER_GROUP
      - MAX_USERNAME_LENGTH
      - DISABLE_ANONYMOUS
      - DISABLE_NOTIFICATIONS
      - SECRET_KEY
      - API_URL=back:50051
      - FRONT_URL=/
      - CHAT_URL=${HTTP_PROTOCOL}://${CHAT_DOMAIN}/
      - PUBLIC_MAP_STORAGE_URL=${HTTP_PROTOCOL}://${DOMAIN}/map-storage
      - START_ROOM_URL
      - OPID_PROMPT=login
      - OPID_WOKA_NAME_POLICY
      - OPID_CLIENT_ID
      - OPID_CLIENT_SECRET
      - OPID_CLIENT_ISSUER
      - OPID_PROFILE_SCREEN_PROVIDER
      - OPID_SCOPE
      - OPID_USERNAME_CLAIM
      - OPID_LOCALE_CLAIM
      - OPID_LOGOUT_REDIRECT_URL
      - ENABLE_CHAT
      - ENABLE_CHAT_UPLOAD
      - ENABLE_CHAT_ONLINE_LIST
      - ENABLE_CHAT_DISCONNECTED_LIST
      - UPLOADER_URL=${HTTP_PROTOCOL}://${UPLOADER_DOMAIN}
      # Only used if you set up a JWT authentication mechanism in Ejabberd
      - EJABBERD_JWT_SECRET=${EJABBERD_JWT_SECRET}
      - EJABBERD_DOMAIN=${EJABBERD_DOMAIN}
      # Report issues menu
      - ENABLE_REPORT_ISSUES_MENU=${ENABLE_REPORT_ISSUES_MENU}
      - REPORT_ISSUES_URL=${REPORT_ISSUES_URL}
      - ENABLE_OPENAPI_ENDPOINT=true
      - ADMIN_API_TOKEN
      - ROOM_API_PORT=50051
      - ROOM_API_SECRET_KEY=${ROOM_API_SECRET_KEY}
      #- GRPC_VERBOSITY=DEBUG
      #- GRPC_TRACE=all
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.routers.play.rule: "Host(`${DOMAIN}`) && PathPrefix(`/`)"
      traefik.http.routers.play.entryPoints: "web"
      traefik.http.services.play.loadbalancer.server.port: "3000"
      traefik.http.routers.play.service: "play"

      traefik.http.routers.room-api.rule: "Host(`${DOMAIN}`)"
      traefik.http.routers.room-api.entryPoints: "grpc"
      traefik.http.routers.room-api.service: "room-api"
      traefik.http.services.room-api.loadbalancer.server.port: "50051"
      traefik.http.services.room-api.loadbalancer.server.scheme: "h2c"
    restart: ${RESTART_POLICY}

  chat:
    image: thecodingmachine/workadventure-chat:${VERSION}
    environment:
      - PUSHER_URL=${HTTP_PROTOCOL}://${DOMAIN}
      - UPLOADER_URL=${HTTP_PROTOCOL}://$UPLOADER_DOMAIN
      - EMBEDLY_KEY=${EMBEDLY_KEY}
      - ENABLE_CHAT_UPLOAD=${ENABLE_CHAT_UPLOAD}
      - EJABBERD_DOMAIN=${EJABBERD_DOMAIN}
      - EJABBERD_WS_URI=wss://${EJABBERD_DOMAIN}/xmpp/ws
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.routers.chat.rule: "Host(`${CHAT_DOMAIN}`)"
      traefik.http.routers.chat.entryPoints: "web"
      traefik.http.services.chat.loadbalancer.server.port: "80"
      traefik.http.routers.chat.service: "chat"
    restart: ${RESTART_POLICY}

  back:
    image: thecodingmachine/workadventure-back:${VERSION}
    environment:
      - PLAY_URL=${HTTP_PROTOCOL}://${DOMAIN}
      - SECRET_JITSI_KEY
      - ENABLE_FEATURE_MAP_EDITOR
      - SECRET_KEY
      #- ADMIN_API_TOKEN
      #- ADMIN_API_URL
      - TURN_SERVER
      - TURN_USER
      - TURN_PASSWORD
      - TURN_STATIC_AUTH_SECRET
      - STUN_SERVER
      - JITSI_URL
      - JITSI_ISS
      - BBB_URL
      - BBB_SECRET
      - MAX_PER_GROUP
      - STORE_VARIABLES_FOR_LOCAL_MAPS
      - REDIS_HOST=redis
      - PROMETHEUS_AUTHORIZATION_TOKEN
      - MAP_STORAGE_URL=map-storage:50053
      - INTERNAL_MAP_STORAGE_URL=http://map-storage:3000
      - PUBLIC_MAP_STORAGE_URL=${HTTP_PROTOCOL}://${DOMAIN}/map-storage
      - PLAYER_VARIABLES_MAX_TTL
      - EJABBERD_API_URI=${HTTP_PROTOCOL}://${EJABBERD_DOMAIN}/api
      - EJABBERD_DOMAIN=${EJABBERD_DOMAIN}
      - EJABBERD_USER=${EJABBERD_USER}
      - EJABBERD_PASSWORD=${EJABBERD_PASSWORD}
      - ENABLE_CHAT
      - ENABLE_CHAT_UPLOAD
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.middlewares.strip-api-prefix.stripprefix.prefixes: "/api"
      traefik.http.routers.back.rule: "Host(`${EJABBERD_DOMAIN}`) && PathPrefix(`/api`)"
      traefik.http.routers.back.middlewares: "strip-api-prefix@docker"
      traefik.http.services.back.loadbalancer.server.port: "8080"
      traefik.http.routers.back.entryPoints: "web"
      traefik.http.routers.back.service: "back"
    restart: ${RESTART_POLICY}

  uploader:
    image: thecodingmachine/workadventure-uploader:${VERSION}
    environment:
      - UPLOADER_URL=${HTTP_PROTOCOL}://${UPLOADER_DOMAIN}
      #REDIS
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      #CHAT
      - ADMIN_API_URL=${ADMIN_API_URL}
      - ENABLE_CHAT_UPLOAD=${ENABLE_CHAT_UPLOAD}
      - UPLOAD_MAX_FILESIZE=${UPLOAD_MAX_FILESIZE}
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.routers.uploader.rule: "Host(`${UPLOADER_DOMAIN}`)"
      traefik.http.routers.uploader.entryPoints: "web"
      traefik.http.services.uploader.loadbalancer.server.port: "8080"
      traefik.http.routers.uploader.service: "uploader"
    restart: ${RESTART_POLICY}

  icon:
    image: matthiasluedtke/iconserver:v3.13.0
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.middlewares.strip-icon-prefix.stripprefix.prefixes: "/icon"
      traefik.http.routers.icon.middlewares: "strip-icon-prefix@docker"
      traefik.http.routers.icon.rule: "Host(`${DOMAIN}`) && PathPrefix(`/icon`)"
      traefik.http.routers.icon.entryPoints: "web"
      traefik.http.services.icon.loadbalancer.server.port: "8080"
      traefik.http.routers.icon.service: "icon"
    restart: ${RESTART_POLICY}

  redis:
    image: redis:6
    volumes:
      - ./redis/data:/data
    restart: ${RESTART_POLICY}

  ejabberd:
    image: workadventure/ejabberd:v1
    ports:
      - '5443:5443'
    environment:
      - CTL_ON_CREATE=register ${EJABBERD_USER} ${EJABBERD_DOMAIN} ${EJABBERD_PASSWORD}
      - JWT_SECRET=${EJABBERD_JWT_SECRET}
      - EJABBERD_DOMAIN=${EJABBERD_DOMAIN}
      - EJABBERD_USER=${EJABBERD_USER}
      - EJABBERD_PASSWORD=${EJABBERD_PASSWORD}
    volumes:
      - ./ejabberd.template.yml:/opt/ejabberd/conf/ejabberd.template.yml
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.middlewares.strip-ejabberd-prefix.stripprefix.prefixes: "/xmpp"
      traefik.http.routers.ejabberd.middlewares: "strip-ejabberd-prefix@docker"
      traefik.http.routers.ejabberd.rule: "Host(`${EJABBERD_DOMAIN}`) && PathPrefix(`/xmpp`)"
      traefik.http.routers.ejabberd.entryPoints: "web"
      traefik.http.services.ejabberd.loadbalancer.server.port: "5443"
      traefik.http.routers.ejabberd.service: "ejabberd"
    restart: ${RESTART_POLICY}

  map-storage:
    image: thecodingmachine/workadventure-map-storage:${VERSION}
    environment:
      API_URL: back:50051
      PROMETHEUS_AUTHORIZATION_TOKEN: "$PROMETHEUS_AUTHORIZATION_TOKEN"
      AUTHENTICATION_STRATEGY: "$MAP_STORAGE_AUTHENTICATION_STRATEGY"
      AUTHENTICATION_USER: "$MAP_STORAGE_AUTHENTICATION_USER"
      AUTHENTICATION_PASSWORD: "$MAP_STORAGE_AUTHENTICATION_PASSWORD"
      AUTHENTICATION_TOKEN: "$MAP_STORAGE_AUTHENTICATION_TOKEN"
    volumes:
      - ./map-storage/data:/maps
    labels:
      traefik.enable: "true"
      traefik.docker.network: "traefik"
      traefik.http.middlewares.strip-map-storage-prefix.stripprefix.prefixes: "/map-storage"
      traefik.http.routers.map-storage.middlewares: "strip-map-storage-prefix@docker"
      traefik.http.routers.map-storage.rule: "Host(`${DOMAIN}`) && PathPrefix(`/map-storage`)"
      traefik.http.routers.map-storage.entryPoints: "web"
      traefik.http.services.map-storage.loadbalancer.server.port: "3000"
      traefik.http.routers.map-storage.service: "map-storage"
    restart: ${RESTART_POLICY}
