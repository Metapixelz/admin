// Code generated by ent, DO NOT EDIT.

package maps

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the maps type in the database.
	Label = "maps"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRoomName holds the string denoting the roomname field in the database.
	FieldRoomName = "room_name"
	// FieldMapUrl holds the string denoting the mapurl field in the database.
	FieldMapUrl = "map_url"
	// FieldPolicyNumber holds the string denoting the policynumber field in the database.
	FieldPolicyNumber = "policy_number"
	// FieldContactPage holds the string denoting the contactpage field in the database.
	FieldContactPage = "contact_page"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"
	// FieldEnableChat holds the string denoting the enablechat field in the database.
	FieldEnableChat = "enable_chat"
	// FieldEnableChatUpload holds the string denoting the enablechatupload field in the database.
	FieldEnableChatUpload = "enable_chat_upload"
	// FieldEnableChatOnlineList holds the string denoting the enablechatonlinelist field in the database.
	FieldEnableChatOnlineList = "enable_chat_online_list"
	// FieldEnableChatDisconnectedList holds the string denoting the enablechatdisconnectedlist field in the database.
	FieldEnableChatDisconnectedList = "enable_chat_disconnected_list"
	// FieldCanReport holds the string denoting the canreport field in the database.
	FieldCanReport = "can_report"
	// FieldExpireOn holds the string denoting the expireon field in the database.
	FieldExpireOn = "expire_on"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the maps in the database.
	Table = "maps"
)

// Columns holds all SQL columns for maps fields.
var Columns = []string{
	FieldID,
	FieldRoomName,
	FieldMapUrl,
	FieldPolicyNumber,
	FieldContactPage,
	FieldTags,
	FieldEnableChat,
	FieldEnableChatUpload,
	FieldEnableChatOnlineList,
	FieldEnableChatDisconnectedList,
	FieldCanReport,
	FieldExpireOn,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTags holds the default value on creation for the "tags" field.
	DefaultTags []string
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
)

// OrderOption defines the ordering options for the Maps queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRoomName orders the results by the roomName field.
func ByRoomName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRoomName, opts...).ToFunc()
}

// ByMapUrl orders the results by the mapUrl field.
func ByMapUrl(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMapUrl, opts...).ToFunc()
}

// ByPolicyNumber orders the results by the policyNumber field.
func ByPolicyNumber(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPolicyNumber, opts...).ToFunc()
}

// ByContactPage orders the results by the contactPage field.
func ByContactPage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldContactPage, opts...).ToFunc()
}

// ByEnableChat orders the results by the enableChat field.
func ByEnableChat(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnableChat, opts...).ToFunc()
}

// ByEnableChatUpload orders the results by the enableChatUpload field.
func ByEnableChatUpload(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnableChatUpload, opts...).ToFunc()
}

// ByEnableChatOnlineList orders the results by the enableChatOnlineList field.
func ByEnableChatOnlineList(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnableChatOnlineList, opts...).ToFunc()
}

// ByEnableChatDisconnectedList orders the results by the enableChatDisconnectedList field.
func ByEnableChatDisconnectedList(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEnableChatDisconnectedList, opts...).ToFunc()
}

// ByCanReport orders the results by the canReport field.
func ByCanReport(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCanReport, opts...).ToFunc()
}

// ByExpireOn orders the results by the expireOn field.
func ByExpireOn(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExpireOn, opts...).ToFunc()
}

// ByCreatedAt orders the results by the createdAt field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
